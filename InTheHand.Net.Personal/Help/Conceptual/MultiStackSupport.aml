<?xml version="1.0" encoding="utf-8"?>
<topic id="a103e563-07ae-474e-94f5-677a3150a6bb" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
      <para>From version 2.5 (actually version 2.4.1) we support using the Microsoft and Widcomm stacks at the same time. 
      This allows one program to support more than seven connections, or similar situations. </para>
    </introduction>
    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Section1">
      <title>Multi-stack support</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        <para>To use the multi-stack support on Windows XP, install both Microsoft and Widcomm stacks and attach their radio dongles.  
        Then create an app.config file with your application and set the flag “oneStackOnly” to “false” — there is a sample app.config file in the assemblies folder, copy it, rename it to match you app e.g. “thisismyapp.exe.config”, and change the settings as required.  
        It is likely that we will change the default for “oneStackOnly” to be “false” in the next version.</para>
<para>If the two stacks both load successfully, then BluetoothRadio.AllRadios should contain two items.  
Using new BluetoothClient() etc will always create an instance from the first radio/stack.  
To specifically create an instance from a particular radio/stack use the StackFactory property on BluetoothRadio.  For instance:</para>
<code>Dim radioB As BluetoothRadio = BluetoothRadio.AllRadios(1)
Dim cli As BluetoothClient = radioB.StackFactory.CreateBluetoothClient()
Dim lsnr As BluetoothListener = _
   radioB.StackFactory.CreateBluetoothListener(BluetoothService.Wap)</code>
<para>If at least one of the stacks loads, but one or more fails to load then the program will continue.  More diagnostics can be enabled to allow troubleshooting.  
Set app.config flag “reportAllErrors” to “true”.  This outputs any errors on the Console and on System.Diagnostics.Trace output; since we use Trace.Fail currently, an assert dialog box will pop-up and need to be closed manually —  if necessary see MSDN on “AssertUiEnabled=false” for disabling the dialog.
</para>
      </content>
      <!-- If a section contains a sections element, its content creates
           sub-sections.  These are not collapsible.
      <sections>
          <section address="SubSection1">
              <title>Sub-section 1</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
          <section address="SubSection2">
              <title>Sub-section 2</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
      </sections> -->
    </section>
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>